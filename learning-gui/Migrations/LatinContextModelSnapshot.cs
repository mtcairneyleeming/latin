// <auto-generated />

using database.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace learning_gui.Migrations
{
    [DbContext(typeof(LatinContext))]
    internal class LatinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("database.Database.Category", b =>
            {
                b.Property<int>("CategoryId")
                    .ValueGeneratedOnAdd();

                b.Property<string>("CategoryIdentifier");

                b.Property<string>("Name");

                b.Property<int>("Number");

                b.HasKey("CategoryId");

                b.ToTable("Category");
            });

            modelBuilder.Entity("database.Database.Definition", b =>
            {
                b.Property<int>("DefinitionId")
                    .ValueGeneratedOnAdd();

                b.Property<string>("Data");

                b.Property<int>("LemmaId");

                b.Property<int>("Level");

                b.HasKey("DefinitionId");

                b.HasIndex("LemmaId");

                b.ToTable("Definitions");
            });

            modelBuilder.Entity("database.Database.Form", b =>
            {
                b.Property<int>("FormId")
                    .ValueGeneratedOnAdd();

                b.Property<int>("LemmaId");

                b.Property<string>("MiscFeatures");

                b.Property<string>("MorphCode");

                b.Property<string>("Text");

                b.HasKey("FormId");

                b.HasIndex("LemmaId");

                b.ToTable("Forms");
            });

            modelBuilder.Entity("database.Database.Gender", b =>
            {
                b.Property<int>("GenderId")
                    .ValueGeneratedOnAdd();

                b.Property<string>("Description");

                b.Property<string>("GenderCode");

                b.Property<string>("Name");

                b.HasKey("GenderId");

                b.ToTable("Genders");
            });

            modelBuilder.Entity("database.Database.Lemma", b =>
            {
                b.Property<int>("LemmaId")
                    .ValueGeneratedOnAdd();

                b.Property<string>("LemmaShortDef");

                b.Property<string>("LemmaText");

                b.HasKey("LemmaId");

                b.ToTable("Lemmas");
            });

            modelBuilder.Entity("database.Database.LemmaData", b =>
            {
                b.Property<int>("LemmaId");

                b.Property<int?>("CategoryId");

                b.Property<int?>("GenderId");

                b.Property<int?>("PartOfSpeechId");

                b.HasKey("LemmaId");

                b.HasIndex("CategoryId");

                b.HasIndex("GenderId");

                b.HasIndex("PartOfSpeechId");

                b.ToTable("LemmaData");
            });

            modelBuilder.Entity("database.Database.PartOfSpeech", b =>
            {
                b.Property<int>("PartId")
                    .ValueGeneratedOnAdd();

                b.Property<string>("PartDesc");

                b.Property<string>("PartName");

                b.HasKey("PartId");

                b.ToTable("PartOfSpeech");
            });

            modelBuilder.Entity("database.Database.UserLearntWord", b =>
            {
                b.Property<int>("UserLearntWordId")
                    .ValueGeneratedOnAdd();

                b.Property<int>("LemmaId");

                b.Property<int>("RevisionStage");

                b.HasKey("UserLearntWordId");

                b.HasIndex("LemmaId")
                    .IsUnique();

                b.ToTable("UserLearntWords");
            });

            modelBuilder.Entity("database.Database.Definition", b =>
            {
                b.HasOne("database.Database.Lemma", "Lemma")
                    .WithMany("Definitions")
                    .HasForeignKey("LemmaId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("database.Database.Form", b =>
            {
                b.HasOne("database.Database.Lemma", "Lemma")
                    .WithMany("Forms")
                    .HasForeignKey("LemmaId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("database.Database.LemmaData", b =>
            {
                b.HasOne("database.Database.Category", "Category")
                    .WithMany("LemmaData")
                    .HasForeignKey("CategoryId");

                b.HasOne("database.Database.Gender", "Gender")
                    .WithMany("LemmaData")
                    .HasForeignKey("GenderId");

                b.HasOne("database.Database.Lemma", "Lemma")
                    .WithOne("LemmaData")
                    .HasForeignKey("database.Database.LemmaData", "LemmaId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne("database.Database.PartOfSpeech", "PartOfSpeech")
                    .WithMany("LemmaData")
                    .HasForeignKey("PartOfSpeechId");
            });

            modelBuilder.Entity("database.Database.UserLearntWord", b =>
            {
                b.HasOne("database.Database.Lemma", "Lemma")
                    .WithOne("UserLearntWord")
                    .HasForeignKey("database.Database.UserLearntWord", "LemmaId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}